---
- name: "add postgresql gpg key"
  ansible.builtin.rpm_key:
    key: "https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-RHEL"
    state: "present"

- name: "add consul gpg key"
  ansible.builtin.rpm_key:
    key: "https://rpm.releases.hashicorp.com/gpg"
    state: "present"

- name: "provide consul through hashicorp repo"
  ansible.builtin.yum_repository:
    name: "hasicorp"
    description: "Hashicorp RPM repo"
    baseurl: "https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable"
    state: "present"
    enabled: true
    gpgcheck: true

- name: "add postgresql repository through pacakge"
  ansible.builtin.package:
    name: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
    state: "present"

- name: "disable built-in postgresql module"
  ansible.builtin.command: "dnf -qy module disable postgresql"

- name: "install packages on the hosts"
  ansible.builtin.package:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "postgresql17-server"
    - "postgresql17-contrib"
    - "patroni"
    - "consul"
    - "patroni-consul"
    - "keepalived"

- name: "remove packages on the hosts"
  ansible.builtin.package:
    name: "{{ item }}"
    state: "absent"
  with_items:
    - "postgresql-server"
    - "postgresql-contrib"
    - "pgbouncer"

- name: "ensure services enabled"
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
  with_items:
    - "keepalived"

- name: "postgresql | allow postgresql on firewalld"
  ansible.posix.firewalld:
    port: "{{ postgres.port }}/tcp"
    permanent: true
    immediate: true
    state: "enabled"
    zone: "{{ item }}"
  with_items:
    - "public"
    - "internal"
    - "trusted"
    - "home"
  notify:
    - "reload firewalld"

- name: "keepalived | create keepalived_script group"
  ansible.builtin.group:
    name: "keepalived_script"
    state: "present"
  notify:
    - "reload keepalived"

- name: "keepalived | create keepalived_script user"
  ansible.builtin.user:
    name: "keepalived_script"
    groups: "keepalived_script"
    shell: "/bin/false"
    state: "present"
    password: "!"
    create_home: false
    system: true
  notify:
    - "reload keepalived"

- name: "keepalived | ensure script path"
  ansible.builtin.file:
    dest: "/usr/libexec/keepalived/scripts"
    state: "directory"

- name: "keepalived | template config"
  ansible.builtin.template:
    src: "keepalived.conf.j2"
    dest: "/etc/keepalived/keepalived.conf"
    mode: '0644'
  notify:
    - "reload keepalived"

- name: "postgresql | create postgres group"
  ansible.builtin.group:
    name: "postgres"
    state: "present"

- name: "postgresql | create postgresql user"
  ansible.builtin.user:
    name: "postgres"
    groups: "postgres"
    shell: "/bin/false"
    state: "present"
    password: "!"
    create_home: false
    system: true

- name: "patroni | create patroni group"
  ansible.builtin.group:
    name: "patroni"
    state: "present"

- name: "patroni | create patroniql user"
  ansible.builtin.user:
    name: "patroni"
    groups: "patroni"
    shell: "/bin/false"
    state: "present"
    password: "!"
    create_home: false
    system: true

- name: "postgresql | ensure PGDATA"
  ansible.builtin.file:
    dest: "{{ postgres.data_directory }}"
    state: "directory"
    owner: "postgres"
    group: "postgres"
    mode: "0750"

- name: "postgresql | ensure log path"
  ansible.builtin.file:
    dest: "{{ postgres.log.directory }}"
    state: "directory"
    owner: "postgres"
    group: "postgres"

- name: "postgresql | ensure services"
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
  with_items:
    - "postgresql-{{ postgres.version }}"
