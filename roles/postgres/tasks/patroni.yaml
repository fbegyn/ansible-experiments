---
- name: "postgresql | check if PG_VERSION exists"
  ansible.builtin.stat:
    path: "{{ postgres.data_directory }}/PG_VERSION"
  register: pgversion

- name: "postgresql | check if postgresql.auto.conf exists"
  ansible.builtin.stat:
    path: "{{ postgres.data_directory }}/postgresql.auto.conf"
  register: pgauto

- name: "postgresql | check if postgres@{{ postgres.unit_target }} exists"
  ansible.builtin.stat:
    path: "/etc/systemd/system/postgresql@{{ postgres.unit_target }}.service.d"
  register: pgunit
  notify:
    - "start postgresql"

- name: "postgresql | ensure PGDATA"
  ansible.builtin.file:
    dest: "{{ postgres.data_directory }}"
    state: "directory"
    owner: "postgres"
    group: "postgres"
    mode: "0750"

- name: "consul | render agent config"
  ansible.builtin.template:
    src: "consul.hcl.j2"
    dest: "/etc/consul.d/agent.hcl"
    owner: "consul"
    group: "consul"
    mode: '0644'
  notify:
    - "restart consul"

- name: "patroni | allow patroni on firewalld"
  ansible.posix.firewalld:
    port: "{{ patroni.port }}/tcp"
    permanent: true
    immediate: true
    state: "enabled"
    zone: "{{ item }}"
  with_items:
    - "public"
    - "internal"
    - "trusted"
    - "home"
  notify:
    - "reload firewalld"

- name: "patroni | template patroni config"
  ansible.builtin.template:
    src: "patroni.yaml.j2"
    dest: "/etc/patroni/patroni.yml"
    mode: '0644'
    owner: "postgres"
    group: "postgres"
  notify:
    - "reload patroni"
    - "start patroni"

- name: "flushing handlers"
  ansible.builtin.meta: "flush_handlers"

- name: "postgresql | wait for startup"
  ansible.builtin.wait_for:
    port: "{{ postgres.port }}"
    delay: 2

- name: "postgresql | setup replication user"
  become_user: "postgres"
  community.postgresql.postgresql_user:
    name: "{{ postgres.replication.username }}"
    password: "{{ postgres.replication.password }}"
    role_attr_flags: "REPLICATION"

- name: "ensure services started"
  ansible.builtin.service:
    name: "{{ item }}"
    state: "started"
  with_items:
    - "postgresql@{{ postgres.unit_target }}"
    - "patroni"
    - "keepalived"
