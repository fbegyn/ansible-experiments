---
- name: "install packages on the hosts"
  ansible.builtin.package:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "python3-psycopg2"
    - "python3-flask"

- name: "python | allow demo on firewalld"
  ansible.posix.firewalld:
    port: "{{ python.port }}/tcp"
    permanent: true
    immediate: true
    state: "enabled"
    zone: "{{ item }}"
  with_items:
    - "public"
    - "internal"
    - "trusted"
    - "home"

- name: "python | render demo systemd unit"
  ansible.builtin.template:
    src: "demo.service.j2"
    dest: "/etc/systemd/system/demo.service"
    mode: '0644'
  notify:
    - "restart demo"
    - "enable demo"

- name: "reload daemons"
  ansible.builtin.systemd:
    daemon_reload: true

- name: "python | ensure root"
  ansible.builtin.file:
    dest: "{{ python.root }}"
    state: "directory"
    mode: "0755"

- name: "python | render demo site application"
  ansible.builtin.file:
    dest: "{{ python.root }}/__init__.py"
    mode: '0644'
    state: "touch"

- name: "python | render demo site application"
  ansible.builtin.template:
    src: "demo.py.j2"
    dest: "{{ python.root }}/run.py"
    mode: '0755'
  notify:
    - "restart demo"

- name: "python | ensure templates"
  ansible.builtin.file:
    dest: "{{ python.root }}/templates"
    state: "directory"
    mode: "0755"

- name: "python | ensure copy demo.html"
  ansible.builtin.copy:
    src: "demo.html"
    dest: "{{ python.root }}/templates/demo.html"
    mode: "0644"
  notify:
    - "restart demo"

- name: "python | start demo systemd unit"
  ansible.builtin.service:
    name: "demo"
    state: "started"

- name: "nginx | render demo site template"
  ansible.builtin.template:
    src: "demo.conf.j2"
    dest: "/etc/nginx/conf.d/demo.conf"
    mode: '0644'
  notify:
    - "reload nginx"
